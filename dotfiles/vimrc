" Install vim-plug
if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs 
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif
call plug#begin('~/.vim/plugged')
Plug 'tmhedberg/SimpylFold'
"Plugin 'vim-scripts/indentpython.vim'
function! BuildYCM(info)
    " info is a dictionary with 3 fields
    " - name: name of the plugin
    " - status: 'installed', 'updated', or 'unchanged'
    " - force: set on PlugInstall! or PlugUpdate!
    if a:info.status == 'installed' || a:info.force
        !python3 install.py
    endif
endfunction
Plug '~/.vim/plugged/YouCompleteMe', { 'do': function('BuildYCM') }
Plug 'nvie/vim-flake8'
Plug 'vim-airline/vim-airline'
Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }
Plug 'Yggdroot/indentLine', { 'for': 'python' }
Plug 'ctrlpvim/ctrlp.vim'
Plug 'tpope/vim-fugitive'
Plug 'scrooloose/nerdcommenter'
" Plugin 'cjrh/vim-cond'
" Plugin 'davidhalter/jedi-vim'
" All of your Plugins must be added before the following line
call plug#end()

" General settings
set nocompatible
set showcmd " show incomplete cmds down the bottom

set number " show line numbers
set numberwidth=5
set expandtab " expand tab to space
set autoindent
set shiftwidth=4
set tabstop=4
set splitbelow
set splitright
set encoding=utf-8
set hlsearch " highlight search result
set ignorecase " ignore searching case

"vertical/horizontal scroll off settings
set scrolloff=3
set sidescrolloff=7
set sidescroll=1

"load ftplugins and indent files
filetype plugin on
filetype indent on

"use space as leader in sensible modes
nmap <space> <leader>
vmap <space> <leader>

"make wrapped lines more intuitive
noremap <silent> k gk
noremap <silent> j gj
noremap <silent> 0 g0
noremap <silent> $ g$

" map ESC -> jj
inoremap jj <Esc>

" split navigations
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-H> <C-W><C-H>
nnoremap <C-L> <C-W><C-L>

" explorer mappings
nnoremap <leader>nt :NERDTreeToggle<cr>
nnoremap <leader>nf :NERDTreeFind<cr>
nnoremap <leader>nn :e .<cr>
nnoremap <leader>f :CtrlP<cr>
nnoremap <c-f> :CtrlP<cr>

" Enable folding
set foldmethod=indent
set foldlevel=99

au BufNewFile, BufRead *.py
    \ set tabstop=4
    \ set softtabstop=4
    \ set shiftwidth=4
    \ set textwidth=79
    \ set expandtab
    \ set autoindent
    \ set fileformat=unix

au BufRead, BufNewFile *.py, *.pyw, *.c, *.cpp, *.h match BadWhitespace /\s\+$/

" Config of Plugins
" Flake8
let python_high_light_all=1
syntax on

" indentLine
let g:IndentLineEnable=1

" YCM
let g:ycm_autoclose_preview_window_after_completion=1
map <leader>g :YmcCompleter GoToDefinitionElseDeclaration<CR>
" let g:ycm_python_binary_path = "python"     " use env python as python bin
let g:ycm_semantic_triggers = {'python': ['re!from\s+\S+\s+import\s']}
let g:ycm_python_interpreter_path = ''
let g:ycm_python_sys_path = []
let g:ycm_extra_conf_vim_data = [
    \ 'g:ycm_python_interpreter_path',
    \ 'g:ycm_python_sys_path'
    \]
let g:ycm_global_ycm_extra_conf = '~/global_extra_conf.py'

" Uncomment the following to have Vim jump to the last position when
" reopening a file
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

" CtrlP
set wildignore+=*/tmp/*,*.so,*.swp,*.zip

let g:ctrlp_custom_ignore = '\v[\/]\.git$'
let g:ctrlp_max_fiels=3000
let g:ctrlp_custom_ignore = {
    \ 'dir': '\v[\/]\.git$',
    \ 'file': '\v\.(exe|so|dllpyc|jpeg|jpg|png|mat|zip|tar|tar.gz|bz2|swp|swo|xml)$',
    \ 'link': 'some_bad_symbolic_links',
    \ }

" airline
let g:airline#extensions#tabline#enabled = 1
